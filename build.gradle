apply plugin: 'java'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
version = '1.0'
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'io.spring.gradle:dependency-management-plugin:0.5.3.RELEASE'
    }
}

jar {
    baseName = 'gs-rest-service-cors'
    version =  '0.1.0'
}

apply plugin: 'io.spring.dependency-management'

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'io.spring.platform:platform-bom:2.0.2.RELEASE'
    }
}

dependencies {
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-test'
    compile 'org.skyscreamer:jsonassert'
    compile 'org.springframework.boot:spring-boot-data-jpa'
    compile 'org.springframework.data:spring-data-jpa'
    compile 'mysql:mysql-connector-java'
    compile 'org.hibernate:hibernate-core'
    compile 'org.hibernate:hibernate-entitymanager'
    compile 'org.springframework:spring-aspects'
    compile 'org.springframework:spring-context-support'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.10'
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.13'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'
}
